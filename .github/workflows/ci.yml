name: CI

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest       

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'

      - name: Setup DynamoDB Local
        uses: rrainn/dynamodb-action@v2.0.1
        with:
          port: 8000
          cors: '*'

      - name: Install dependencies
        run: |
             yarn install --frozen-lockfile 
             yarn playwright install-deps

      - name: Copy enviromental variables
        run: |
          cp apps/diax-back/.env.template apps/diax-back/.env
          cp apps/diax-back-e2e/.env.template apps/diax-back-e2e/.env
          cp apps/diax-front/.env.local.template apps/diax-front/.env.local
          cp apps/diax-front-e2e/.env.template apps/diax-front-e2e/.env
          
          #Replace if it exists or append if it doesn't
          sed -i 's/^COGNITO_TEST_PASSWORD=.*/COGNITO_TEST_PASSWORD=${{ secrets.COGNITO_TEST_PASSWORD }}/' apps/diax-back-e2e/.env || echo "COGNITO_TEST_PASSWORD=${{ secrets.COGNITO_TEST_PASSWORD }}" >> apps/diax-back-e2e/.env
          sed -i 's/^COGNITO_TEST_PASSWORD=.*/COGNITO_TEST_PASSWORD=${{ secrets.COGNITO_TEST_PASSWORD }}/' apps/diax-front-e2e/.env || echo "COGNITO_TEST_PASSWORD=${{ secrets.COGNITO_TEST_PASSWORD }}" >> apps/diax-front-e2e/.env

          sed -i 's/^AWS_ACCESS_KEY_ID=.*/AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}/' apps/diax-back/.env || echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> apps/diax-back/.env
          sed -i 's/^AWS_SECRET_ACCESS_KEY=.*/AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}/' apps/diax-back/.env || echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> apps/diax-back/.env


      #BACKEND
      - name: Run diax-back lint
        run: yarn nx run diax-back:lint

      - name: Run diax-back unit tests
        run: yarn nx run diax-back:test:ci
      
      - name: Run diax-back build
        run: yarn nx run diax-back:build:production

      - name: Run diax-back e2e tests
        run: |
          yarn nx run diax-back:serve:production & 
          SERVER_PID=$!
          yarn wait-on http://localhost:3000/api 
          yarn nx run diax-back-e2e:e2e
          kill $SERVER_PID

      #FRONTEND
      - name: Run diax-front lint
        run: yarn nx run diax-front:lint

      - name: Run diax-front unit tests
        run: yarn nx run diax-front:test:ci

      - name: Run diax-front build
        run: yarn nx run diax-front:build:production

      - name: Run diax-front e2e tests
        run: |
          yarn nx run diax-front:serve:production & 
          SERVER_PID=$!
          yarn wait-on http://localhost:80/
          yarn nx run diax-front-e2e:e2e
          kill $SERVER_PID

      #UPLOADER
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.13'

      - name: Install Python dependencies
        run: |         
          pip install -r apps/things/uploader/raspberryPI/requirements.txt

      - name: Run raspberryPI lint
        run: |         
          yarn nx run raspberryPI:lint

      - name: Run raspberryPI unit tests
        run: |        
          yarn nx run raspberryPI:test
